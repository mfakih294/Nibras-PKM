buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
//        maven { url "https://mvnrepository.com/artifact/com.gravity/goose" }
        // https://mvnrepository.com/artifact/com.gravity/goose


    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
        //    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
//        runtime ':resources:1.2.14'
        // for ajax uploader
        //classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
    }
}

version "1.5.0"
group "nibras"

//apply plugin:"eclipse"
//apply plugin:"idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
//apply plugin:"asset-pipeline"
apply plugin: "org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://mvnrepository.com" }
    maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
//    maven { url "https://mvnrepository.com/artifact/com.gravity/goose" }
}

dependencies {
//    compile files("lib/ant-1.8.2.jar")
//    compile files("lib/ant-launcher-1.8.2.jar")
//    compile files("lib/com.google.guava_15.0.0.v201403281430.jar")
//    compile files("lib/commons-cli-1.2.jar")
//    compile files("lib/commons-collections-3.2.1.jar")
//    compile files("lib/commons-configuration-1.8.jar")
//    compile files("lib/commons-lang-2.6.jar")
//    compile files("lib/commons-logging-1.1.1.jar")
//    compile files("lib/icu4j.jar")
//    compile files("lib/jpwgen-1.0.3.jar")
//    compile files("lib/json-20140107.jar")
//    compile files("lib/lombok-1.16.16.jar")
//    compile files("lib/ocpsoft-pretty-time-1.0.2.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.core.ant_2.8.0.v20160111-1930.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.core.osgi_2.8.0.v20160111-1930.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.core_2.8.0.v20160315-1828.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.html.core_2.8.0.v20160111-1930.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.markdown.core_2.8.0.v20160121-2126.jar")
//    compile files("lib/org.eclipse.mylyn.wikitext.textile.core_2.8.0.v20160111-1930.jar")
//    compile files("lib/org.springframework.util.jar")
//    compile files("lib/pdfbox-app-1.8.9.jar")
    compile files("lib/slf4j-api-1.7.12.jar")
//    compile files("lib/xmlrpc-1.1.1.jar")
//    compile files("lib/groovy-ant-2.4.15.jar")
//    compile files("lib/ajax-tags-1.0.0.jar")
//    compile files("lib/jwordpress-0.7.0-cli.jar")
//    compile files("lib/jwordpress-0.7.0.jar")
//    compile 'com.itextpdf:itextpdf:5.5.0'
    compile fileTree(dir: 'lib', include: '*.jar')
//    compile "wordpress-java:jwordpress:0.7.0"
//    compile group: 'net.bican', name: 'jwordpress', version: '0.5.1'
//    compile group: 'redstone.xmlrpc', name: 'xmlrpc', version: '1.1.1'
//    compile group: 'net.bican', name: 'jwordpress', version: '0.7.0'

    //compile "org.codehaus.groovy.ant.Groovy"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"



    //  compile group: 'com.gravity', name: 'goose', version: '2.1.23'
    //compile group: 'com.github.emmanueltouzery', name: 'crony', version: '1.1.0'
    compile group: 'com.cronutils', name: 'cron-utils', version: '9.0.2'

    // https://mvnrepository.com/artifact/com.intuit.fuzzymatcher/fuzzy-matcher
    compile group: 'com.intuit.fuzzymatcher', name: 'fuzzy-matcher', version: '1.0.4'

// other plugins
    compile "com.nayidisha.grails.uploadr:grails3-uploadr:3.0"
    compile 'org.grails.plugins:remote-pagination:0.5.0'
    compile 'org.grails.plugins:grails-pretty-time:4.0.0'
    compile 'org.grails.plugins:grails-console:2.1.1'
    compile 'org.grails.plugins:grails-markdown:3.0.0'
    compile 'org.grails.plugins:iCalendar:0.6.4'

    compile 'org.grails.plugins:external-config:1.4.0'

    compile 'org.grails.plugins:quartz:2.0.13'

    //compile "org.grails.plugins:feeds:1.6"
    compile 'org.grails.plugins:feeds:2.0.0-SNAPSHOT'

    compile 'org.grails.plugins:spring-security-core:3.2.3'
    //   compile "org.grails.plugins:resources"


    // compile 'org.grails.plugins:joda-time:2.1.0'

    //compile "org.grails.plugins:ajax-uploader:1.1"

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    //runtime 'mysql-connector-java:5.1.18'
    runtime group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'

    //compile "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb:1.1.2"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

//assets {
//  minifyJs = true
//  minifyCss = true
//}


war {
    version ""
    archiveName = "nibras.war"
}
