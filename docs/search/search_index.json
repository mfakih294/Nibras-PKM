{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Nibras System An oasis for concentration in the age of distractions and information overload Nibras is a local open source system for the long-term management of personal information. It is a combination of a web-based application (Nibras PKM) intended for desktop use, and an Android mobile application (Nibras Reader). Local The user has full control over his/her data, without the need for a (fast) internet connection, and without all the distractions and information overload that the internet can cause. Open source The user has control over the system itself too, especially when using it on the long term to manage the important personal information and files. Comprehensize It manages resources (articles, books, documents), notes, writings, tasks, goals, journal, planner, payments, indicators, and (study) courses and departments. Powerful It was designed with large amounts of information in mind. In current usage, it manages dozens of thousands of records. With its commands and saved searches, it makes easy to navigate through all the information. Documentation User's guide is available online at https://mfakih294.github.io/Nibras-PKM/ . Code, releases and issues Nibras PKM is hosted on GitHub https://github.com/mfakih294/Nibras-PKM . Nibras Reader Nibras Reader is available as a browser application and as an Android application. It that connects to a Nibras PKM system (e.g. on the same WIFI network), and gets the bookmarked records in key modules. It also allows the user to enter quick one-line notes that will be synced to Nibras Desktop on user's choice. To use Nibras Reader, the user has to specify first the IP and port of Nibras PKM (found on the footer region). Then, when clicking 'Sync', all bookmarked records will be available for reading on mobile. Google Play link: https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile The browser application is bundled with the main Nibras zip file (see releases page).","title":"Home"},{"location":"index.html#nibras-system","text":"An oasis for concentration in the age of distractions and information overload Nibras is a local open source system for the long-term management of personal information. It is a combination of a web-based application (Nibras PKM) intended for desktop use, and an Android mobile application (Nibras Reader). Local The user has full control over his/her data, without the need for a (fast) internet connection, and without all the distractions and information overload that the internet can cause. Open source The user has control over the system itself too, especially when using it on the long term to manage the important personal information and files. Comprehensize It manages resources (articles, books, documents), notes, writings, tasks, goals, journal, planner, payments, indicators, and (study) courses and departments. Powerful It was designed with large amounts of information in mind. In current usage, it manages dozens of thousands of records. With its commands and saved searches, it makes easy to navigate through all the information.","title":"Nibras System"},{"location":"index.html#documentation","text":"User's guide is available online at https://mfakih294.github.io/Nibras-PKM/ .","title":"Documentation"},{"location":"index.html#code-releases-and-issues","text":"Nibras PKM is hosted on GitHub https://github.com/mfakih294/Nibras-PKM .","title":"Code, releases and issues"},{"location":"index.html#nibras-reader","text":"Nibras Reader is available as a browser application and as an Android application. It that connects to a Nibras PKM system (e.g. on the same WIFI network), and gets the bookmarked records in key modules. It also allows the user to enter quick one-line notes that will be synced to Nibras Desktop on user's choice. To use Nibras Reader, the user has to specify first the IP and port of Nibras PKM (found on the footer region). Then, when clicking 'Sync', all bookmarked records will be available for reading on mobile. Google Play link: https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile The browser application is bundled with the main Nibras zip file (see releases page). <!-- * To get it, download and install the .apk release found on its website: < !-- [https://github.com/mfakih294/nibras-mobile](https://github.com/mfakih294/nibras-mobile). ![homepage](./images/nibras-mobile-homepage.jpg)","title":"Nibras Reader"},{"location":"01.html","text":"Main Features Flexible text-based commands to add, update and search records, which provides powerful ways to manage information. Saved searches to save searches for later use. Ability to display records on calendars and Kanban boards. Full-text search of all record fields. Simple file system integration so to greatly reduce the need to organize files manually. Technical details Nibras is developed in Grails framework 3.3.10, which is based on Groovy language, a dynamic language on top of the Java platform. Grails applications run on any platform that can run Java 8 and later, so practically all platforms, including Windows, Linux, Mac. For production use, Nibras uses MySQL 5 for its database, and the file system to store the files of the records. To testing and demonstration, you can run it with h2 database, with no need to configure it. Apache Tomcat 8+ is the recommended application server to run it for production use. History Version 1 was in 2009 as a small web application to manage code snippets (notes), as part of project-based study of web development. From versions 2 to 14, development continued with frequent expansions in application scope and features. Many features were abandoned or redesigned. Version 6.5 was the first stable version to be use daily and reliably. Version 8 was the first public release after a major and comprehensive code cleaning and interface tweaking. Version 14.9 was the second public release, and it was reset to 1.0.0. From version 8.4 of Nibras, whose name was Pomegranate PKM:","title":"Home"},{"location":"01.html#main-features","text":"Flexible text-based commands to add, update and search records, which provides powerful ways to manage information. Saved searches to save searches for later use. Ability to display records on calendars and Kanban boards. Full-text search of all record fields. Simple file system integration so to greatly reduce the need to organize files manually.","title":"Main Features"},{"location":"01.html#technical-details","text":"Nibras is developed in Grails framework 3.3.10, which is based on Groovy language, a dynamic language on top of the Java platform. Grails applications run on any platform that can run Java 8 and later, so practically all platforms, including Windows, Linux, Mac. For production use, Nibras uses MySQL 5 for its database, and the file system to store the files of the records. To testing and demonstration, you can run it with h2 database, with no need to configure it. Apache Tomcat 8+ is the recommended application server to run it for production use.","title":"Technical details"},{"location":"01.html#history","text":"Version 1 was in 2009 as a small web application to manage code snippets (notes), as part of project-based study of web development. From versions 2 to 14, development continued with frequent expansions in application scope and features. Many features were abandoned or redesigned. Version 6.5 was the first stable version to be use daily and reliably. Version 8 was the first public release after a major and comprehensive code cleaning and interface tweaking. Version 14.9 was the second public release, and it was reset to 1.0.0. From version 8.4 of Nibras, whose name was Pomegranate PKM:","title":"History"},{"location":"02.html","text":"Interface Nibras is a one-screen application, with 4 regions: north, east, west, and main, in addition to calendar pages and few custom sub-apps. Regions and panels Screen regions Panels The west panel has many subpanels: Courses panel lists the active courses, grouped by their departments. Modules panel lists the saved searches, grouped by their module. Calendar panel Clicking on a date in the calendar shows the records created in that date, as well as other records related to the date. Calendar page The calendar page shows the journal and planner records, as well as the notes and resouces read withtin a specific time frame. It is available from the \"Calendar\" link in the north region of the application. A sample month view of the calendar A sample week view of the calendar The user can add an event to the calendar after selecting a region in the week or day view of the calendar. The text entered can be a free text, in which case a journal record is created with the text as its title, or can be a Nibras command to add more metadata for the record. The command can start with j or p to create a journal or planner record, respectively. Record display The record in Nibras can be displayed in full and short form. The full form is the default. Example of a full form of a resource (book) record, and under it are the actions buttons. They are displayed when the cursor is over the form. Short form is used in places like tables, to reduce the space occupied by the records. Keyboards Shortcuts Some keyboards shortcuts were implemented to speed up nagivation across the application controls, and to toggle the visibility of the panels. Esc (escape): moves focus (cursor) and cursor to the quick search field. F7 : moves focus (cursor) and cursor to the bottom main command line. Ctrl + arrows : hides/shows the panel corresponding to the arrow: * left arrow : west region. * right arrow : east region. * top arrow : north region.","title":"Interface"},{"location":"02.html#interface","text":"Nibras is a one-screen application, with 4 regions: north, east, west, and main, in addition to calendar pages and few custom sub-apps.","title":"Interface"},{"location":"02.html#regions-and-panels","text":"Screen regions","title":"Regions and panels"},{"location":"02.html#panels","text":"The west panel has many subpanels: Courses panel lists the active courses, grouped by their departments. Modules panel lists the saved searches, grouped by their module. Calendar panel Clicking on a date in the calendar shows the records created in that date, as well as other records related to the date.","title":"Panels"},{"location":"02.html#calendar-page","text":"The calendar page shows the journal and planner records, as well as the notes and resouces read withtin a specific time frame. It is available from the \"Calendar\" link in the north region of the application. A sample month view of the calendar A sample week view of the calendar The user can add an event to the calendar after selecting a region in the week or day view of the calendar. The text entered can be a free text, in which case a journal record is created with the text as its title, or can be a Nibras command to add more metadata for the record. The command can start with j or p to create a journal or planner record, respectively.","title":"Calendar page"},{"location":"02.html#record-display","text":"The record in Nibras can be displayed in full and short form. The full form is the default. Example of a full form of a resource (book) record, and under it are the actions buttons. They are displayed when the cursor is over the form. Short form is used in places like tables, to reduce the space occupied by the records.","title":"Record display"},{"location":"02.html#keyboards-shortcuts","text":"Some keyboards shortcuts were implemented to speed up nagivation across the application controls, and to toggle the visibility of the panels. Esc (escape): moves focus (cursor) and cursor to the quick search field. F7 : moves focus (cursor) and cursor to the bottom main command line. Ctrl + arrows : hides/shows the panel corresponding to the arrow: * left arrow : west region. * right arrow : east region. * top arrow : north region.","title":"Keyboards Shortcuts"},{"location":"03.html","text":"Records and Data Model Certain fields are common to all module records: * Summary * Description * Priority * Type * Bookmarked * Date created and last updated Other fields are particular to certain modules: * Start and end dates (journal and planner). * Completed date, planned and actual duration, percent completed (for tasks and goals). * Author, ISBN, published on, publication city, etc. (for resources). * Blog (for writings and notes). Departments and courses Department and course can assign any record. Comments and tags A comment can be added to any module record. And any module record can have one or more tags. You can see all records tagged with a certain tag from the Tags panel in the west region.","title":"Records and Data Model"},{"location":"03.html#records-and-data-model","text":"Certain fields are common to all module records: * Summary * Description * Priority * Type * Bookmarked * Date created and last updated Other fields are particular to certain modules: * Start and end dates (journal and planner). * Completed date, planned and actual duration, percent completed (for tasks and goals). * Author, ISBN, published on, publication city, etc. (for resources). * Blog (for writings and notes). Departments and courses Department and course can assign any record.","title":"Records and Data Model"},{"location":"03.html#comments-and-tags","text":"A comment can be added to any module record. And any module record can have one or more tags. You can see all records tagged with a certain tag from the Tags panel in the west region.","title":"Comments and tags"},{"location":"04.html","text":"Repository and Files Nibras can have one or two (file) repositories. The user can choose how many to choose (1-2), and the usage of each repository. For example, repository 1 is the main repository for all records while repository 2 is for recent records only. So newly imported files goes to repository 2 first. And each record can have a single unique folder in each repository. The location of the folder is (repository path)/(module type)/(record id) , e.g. c:/rps1/T/123, for all types except resources, which has a special location (reposity path)/R/(type)/(record id/100)/record id , e.g. c:/rps1/R/doc/125/12532. Note: The reason for the special location for resources is that they can be large in number, and so putting them in one folder can cause performance issues. In the folder, you can put any file you want. You can see the folder files inside the record's panel (east region), after clicking on the record title or description.","title":"Repository and Files"},{"location":"04.html#repository-and-files","text":"Nibras can have one or two (file) repositories. The user can choose how many to choose (1-2), and the usage of each repository. For example, repository 1 is the main repository for all records while repository 2 is for recent records only. So newly imported files goes to repository 2 first. And each record can have a single unique folder in each repository. The location of the folder is (repository path)/(module type)/(record id) , e.g. c:/rps1/T/123, for all types except resources, which has a special location (reposity path)/R/(type)/(record id/100)/record id , e.g. c:/rps1/R/doc/125/12532. Note: The reason for the special location for resources is that they can be large in number, and so putting them in one folder can cause performance issues. In the folder, you can put any file you want. You can see the folder files inside the record's panel (east region), after clicking on the record title or description.","title":"Repository and Files"},{"location":"05.html","text":"Adding You can add records through forms, sheets, commands, and by importing files named in Nibras command format. Forms Example of adding a new task: Custom forms The east regions contains 3 forms, each in its own panel, to quickly add a resource, a note, or a record with only summary and description. This speed up data entry, and reduce the navigation needed to enter a new record. It also provides the most common fields, and so shorten the entry form. Quick resource entry Quick note entry Minimal entry Sheet It is available for tasks, payments, and journal.It allows quick adding of many records of different types in one screen. Commands You can add records through the command bar. Adding through commands will be explained in the Commands section. Import You can add records by importing files named in the command notation. To import files, you need to rename them as if they are add commands , without the command type a . So a file named t p3 -- Paper to read create the same record that the command 'a t p3 -- Paper to read` creates. The next 3 screenshot illustrate this process. 1 - Sample files to import 2- The files as seen inside Nibras import screen 3 - The result of importing","title":"Adding"},{"location":"05.html#adding","text":"You can add records through forms, sheets, commands, and by importing files named in Nibras command format.","title":"Adding"},{"location":"05.html#forms","text":"Example of adding a new task: Custom forms The east regions contains 3 forms, each in its own panel, to quickly add a resource, a note, or a record with only summary and description. This speed up data entry, and reduce the navigation needed to enter a new record. It also provides the most common fields, and so shorten the entry form. Quick resource entry Quick note entry Minimal entry","title":"Forms"},{"location":"05.html#sheet","text":"It is available for tasks, payments, and journal.It allows quick adding of many records of different types in one screen.","title":"Sheet"},{"location":"05.html#commands","text":"You can add records through the command bar. Adding through commands will be explained in the Commands section.","title":"Commands"},{"location":"05.html#import","text":"You can add records by importing files named in the command notation. To import files, you need to rename them as if they are add commands , without the command type a . So a file named t p3 -- Paper to read create the same record that the command 'a t p3 -- Paper to read` creates. The next 3 screenshot illustrate this process. 1 - Sample files to import 2- The files as seen inside Nibras import screen 3 - The result of importing","title":"Import"},{"location":"06.html","text":"Search There are 3 types of searches in Nibras: quick search (top right search box), forms, and commands. Quick search Quick search field in the top right corner: it does full text seach over all the module records Forms Form-based search: available on left-hand side of the screen, gives the user the most straightforward way to query the main information types (all except the parameters). Saved searches Saved searches are one of the main features of Nibras system. They are used to build most of the navigation menu and reports. For example, you can use saved query to: Get a list of results e.g. all high priority tasks. Get a table where columns maps to record fields e.g. get all dates and summary of journal records of type 'external event'. Get a random record or records from the list. Display the results in a table grouped by a certain field e.g. course. Display the results in a calendar or timeline. Sample command Saved search record A saved search contains a query and a title, with optionally the query to count the total number.","title":"Search"},{"location":"06.html#search","text":"There are 3 types of searches in Nibras: quick search (top right search box), forms, and commands.","title":"Search"},{"location":"06.html#quick-search","text":"Quick search field in the top right corner: it does full text seach over all the module records","title":"Quick search"},{"location":"06.html#forms","text":"Form-based search: available on left-hand side of the screen, gives the user the most straightforward way to query the main information types (all except the parameters).","title":"Forms"},{"location":"06.html#saved-searches","text":"Saved searches are one of the main features of Nibras system. They are used to build most of the navigation menu and reports. For example, you can use saved query to: Get a list of results e.g. all high priority tasks. Get a table where columns maps to record fields e.g. get all dates and summary of journal records of type 'external event'. Get a random record or records from the list. Display the results in a table grouped by a certain field e.g. course. Display the results in a calendar or timeline. Sample command Saved search record A saved search contains a query and a title, with optionally the query to count the total number.","title":"Saved searches"},{"location":"07.html","text":"Commands Syntax The general form of the commad is as follows: type module (options) -- summary (:: description) with type, module and summary as the only mandatory fields for all records except resources, that require a resource type too. Command type f (find), a (add), u (update)\u2026. Module r (resource), t (task), n (note), \u2026. Options The general format of options is as follows: option symbol or letter option value code The following tables summarize the available options. Option Symbol or letter Example of value codes status ? ?done type # #ebk (ebook) status ? ?done bookmarked * department d dh (health department) course c cpkm (PKM course) Option Symbol or letter Example of value codes language \u2018 \u2018ar (Arabic) priority p p2 (priority 2) context (for tasks only) @ @out (to be done outside) code = =tar id i i2312 start date or ( (11.04.2019 end date or ) 13.04.2019 Examples f t * Finds all bookmarked tasks. f r #mvs ?watched \u2018ar Finds all Arabic movies (mvs) that I have watched. a n r123 \u2013 A note on the book id 123 Adds a note on the book with id 123, with a title a t p3 @out (+2 \u2013 Task 1 Adds a task with priority 3, with context out, due two days from today, and name \u201cTask 1\u201d. a t p3 dh #todo ?inp * +3 -- Task 2 Adds a new task with priority 3, in department H, with type todo, with status in-progress (inp), due 3 days from today, bookmarked, and title \u201cTask 2\u201d. a r cpkm #art -- Article about organization management :: Some description Adds a new resource, with type article, in course coded PKM, with a title and description. u r ?read p3 * Updates all selected resource records, making their status \u201cread\u201d, their priority 3, and bookmark them. Sample command to get English articles:","title":"Commands"},{"location":"07.html#commands","text":"Syntax The general form of the commad is as follows: type module (options) -- summary (:: description) with type, module and summary as the only mandatory fields for all records except resources, that require a resource type too. Command type f (find), a (add), u (update)\u2026. Module r (resource), t (task), n (note), \u2026.","title":"Commands"},{"location":"07.html#options","text":"The general format of options is as follows: option symbol or letter option value code The following tables summarize the available options. Option Symbol or letter Example of value codes status ? ?done type # #ebk (ebook) status ? ?done bookmarked * department d dh (health department) course c cpkm (PKM course) Option Symbol or letter Example of value codes language \u2018 \u2018ar (Arabic) priority p p2 (priority 2) context (for tasks only) @ @out (to be done outside) code = =tar id i i2312 start date or ( (11.04.2019 end date or ) 13.04.2019","title":"Options"},{"location":"07.html#examples","text":"f t * Finds all bookmarked tasks. f r #mvs ?watched \u2018ar Finds all Arabic movies (mvs) that I have watched. a n r123 \u2013 A note on the book id 123 Adds a note on the book with id 123, with a title a t p3 @out (+2 \u2013 Task 1 Adds a task with priority 3, with context out, due two days from today, and name \u201cTask 1\u201d. a t p3 dh #todo ?inp * +3 -- Task 2 Adds a new task with priority 3, in department H, with type todo, with status in-progress (inp), due 3 days from today, bookmarked, and title \u201cTask 2\u201d. a r cpkm #art -- Article about organization management :: Some description Adds a new resource, with type article, in course coded PKM, with a title and description. u r ?read p3 * Updates all selected resource records, making their status \u201cread\u201d, their priority 3, and bookmark them. Sample command to get English articles:","title":"Examples"},{"location":"08.html","text":"Reports The application provides various reports, in addition to the saved searches. Heartbeat dashboard It shows basic statistics and graph of recent data entry made on the application. Indicators Kanban Calendars","title":"Reports"},{"location":"08.html#reports","text":"The application provides various reports, in addition to the saved searches. Heartbeat dashboard It shows basic statistics and graph of recent data entry made on the application. Indicators Kanban Calendars","title":"Reports"},{"location":"09.html","text":"Backup and restore For Nibras, backup and restore should be made to both the database and the repository. Backup Nibras data consists of two items: the database (MySQL), and the files (the repository). So to backup the data, each item has to be backed up, and stored together for consistancy. Database backup To backup the database, simply execute the command: mysqldump -u root -proot db_nibras c:\\db_nibras-backup.sql This command will store a complete dump of Nibras database tables and records to a single file named db_nibras-backup.sql, and stored in folder C:. This commands uses the MySQL user with name root and password root.If you have a different user, you need to update the command. Repository backup To backup the files of the repository, simply compress the repository folder (defined in the application setting under name 'root.rps1.path'), and store the resulting zip file next to the database backup. If you are using multiple respository, you need to backup them all. Restore To restore the data, you need to simply do the reverse actions in the backup. Databse restore To restore the database, it is advised to stop the Nibras application first. Then, execute the command: mysql -u root -proot db_nibras c:\\db_nibras-backup.sql Repository restore To backup the files of the repository, simply extract the repository backup zip file to the location of the repository (defined in the application setting under name 'root.rps1.path'). If you are using multiple respository, you need to restore them all.","title":"Backup and restore"},{"location":"09.html#backup-and-restore","text":"For Nibras, backup and restore should be made to both the database and the repository.","title":"Backup and restore"},{"location":"09.html#backup","text":"Nibras data consists of two items: the database (MySQL), and the files (the repository). So to backup the data, each item has to be backed up, and stored together for consistancy. Database backup To backup the database, simply execute the command: mysqldump -u root -proot db_nibras c:\\db_nibras-backup.sql This command will store a complete dump of Nibras database tables and records to a single file named db_nibras-backup.sql, and stored in folder C:. This commands uses the MySQL user with name root and password root.If you have a different user, you need to update the command. Repository backup To backup the files of the repository, simply compress the repository folder (defined in the application setting under name 'root.rps1.path'), and store the resulting zip file next to the database backup. If you are using multiple respository, you need to backup them all.","title":"Backup"},{"location":"09.html#restore","text":"To restore the data, you need to simply do the reverse actions in the backup. Databse restore To restore the database, it is advised to stop the Nibras application first. Then, execute the command: mysql -u root -proot db_nibras c:\\db_nibras-backup.sql Repository restore To backup the files of the repository, simply extract the repository backup zip file to the location of the repository (defined in the application setting under name 'root.rps1.path'). If you are using multiple respository, you need to restore them all.","title":"Restore"},{"location":"10.html","text":"Installation and Configuration Installation To install Nibras, you have one of three options: Quick installation The quick installation consists of three steps: Download the bundle file corresponding to your platform, e.g. nibras-bundle-windows.zip. Extract the zipped file to a location of your choice on your local disk. Launch Nibras by double clicking on ./scripts/start file. Once Nibras has finished launching, a text message like the one below will appear. ************************************************************ * Nibras has launched. You can access it from: * * https://localhost:1441/nibras * ************************************************************ Note: To stop Nibras, you can close this window, or press ctrl+c in it, or run ./scripts/stop script. and finally download, extract and run the Nibras-Tomcat bundle as detailed below. To launch the application server, simply download and extract the file Nibras-Tomcat.zip from the releases section on Nibras PKM GitHub page to your hard disk on C:/ , and run the batch file \"Start-Nibras.bat\" found on the /Nibras-Tomcat folder. This is the straightforward way to install Nibras on a typical computer. However, you may have other cases that needs changing Nibras configuration files, or its Nibras settings after launching it. Production installation In addition to the steps of the quick installation, you need to download and install MySQL 5.5 or later. MySQL To install MySQL, simply download, install it, and then configure it. You can download from the official website, or, for convenience, from this location (for Windows). After installation, you need to run the configuration wizard, accepting the default options, and making the two below changes: Check on \"Add to the path\" Set the root password as \"root\". So you need to type the word \"root\" (without quotes) two times. Then you are ready to run the batch file \"create-database.bat\" found in /Nibras/Database folder. Other cases Your environment may not match or allow the above installation, and so you may want to customize it. 1 - MySQL already installed: Need to change the parameters of MySQL connection in /Nibras/Application/Tomcat/conf/context.xml; specifically changing the hostname, port, username and password. 2- Port 80 already occupied: Need to change port 80 in file /Nibras/Application/Tomcat/conf/server.xml to another port e.g. 81, or 2019. 3 - Different location to extract \"Nibras.zip\": Need to update the paths in the startup script \"Start-Nibras.bat\" to match the new location. 4 - Different location for the repository: Need just to change the setting value \"root.rps1.path\" inside the application after running it. Advanced installation If you have a supported application server e.g. Tomcat, and MySQL already installed, you just need to install the war file (from the releases section on Nibras PKM github page), and delploy it after configuring its access to the database. Nibras uses a JNDI named db_nibras. In tomcat, you can put this tag below the tag in /conf/context.xml file: Resource auth=\"Container\" driverClassName=\"com.mysql.jdbc.Driver\" name=\"jdbc/db_nibras\" type=\"javax.sql.DataSource\" url=\"jdbc:mysql://localhost:3306/db_nibras\" username=\"nibras-user\" password=\"the-password\"/ after chaning the username and password of the account to use to access the database. install the database server MySQL, and create the database to be used by Nibras. launch the application server Tomcat (that runs Nibras). Update To update the Nibras applicatin, simply download the latest war file the releases page, and put it under (Nibras-path)/Tomcat/webapps, after deleting the existing nibras.war file and nibras folder. It's better to shutdown Nibras first (clicking on Stop-Nibras.bat) before doing the upgrade. Access To access the application, go to https://localhost:2019/nibras from your browser (Firefox and Chrome recommended), then enter the username: admin and password: admin . Configuration Aside from the configuring Tomcat and MySQL, Nibras configuration is done through the application itself, from the Setting panel, on the right of the screen. 12. First steps * Decide on the repository locations. * Decide on the modules you want to use (the modules enabled by default are: notes, tasks, and resources). * Decide on the parameters (types, statuses, contexts etc) that best reflect your information needs. Enter the above choices through the settings and parameters panels. Note: It's better to start with the minimal number of modules, and enable more module with time. This will speed up learning time and reduce the complexity of using it.","title":"Installation and Configuration"},{"location":"10.html#installation-and-configuration","text":"","title":"Installation and Configuration"},{"location":"10.html#installation","text":"To install Nibras, you have one of three options:","title":"Installation"},{"location":"10.html#quick-installation","text":"The quick installation consists of three steps: Download the bundle file corresponding to your platform, e.g. nibras-bundle-windows.zip. Extract the zipped file to a location of your choice on your local disk. Launch Nibras by double clicking on ./scripts/start file. Once Nibras has finished launching, a text message like the one below will appear. ************************************************************ * Nibras has launched. You can access it from: * * https://localhost:1441/nibras * ************************************************************ Note: To stop Nibras, you can close this window, or press ctrl+c in it, or run ./scripts/stop script. and finally download, extract and run the Nibras-Tomcat bundle as detailed below. To launch the application server, simply download and extract the file Nibras-Tomcat.zip from the releases section on Nibras PKM GitHub page to your hard disk on C:/ , and run the batch file \"Start-Nibras.bat\" found on the /Nibras-Tomcat folder. This is the straightforward way to install Nibras on a typical computer. However, you may have other cases that needs changing Nibras configuration files, or its Nibras settings after launching it.","title":"Quick installation"},{"location":"10.html#production-installation","text":"In addition to the steps of the quick installation, you need to download and install MySQL 5.5 or later. MySQL To install MySQL, simply download, install it, and then configure it. You can download from the official website, or, for convenience, from this location (for Windows). After installation, you need to run the configuration wizard, accepting the default options, and making the two below changes: Check on \"Add to the path\" Set the root password as \"root\". So you need to type the word \"root\" (without quotes) two times. Then you are ready to run the batch file \"create-database.bat\" found in /Nibras/Database folder.","title":"Production installation"},{"location":"10.html#other-cases","text":"Your environment may not match or allow the above installation, and so you may want to customize it. 1 - MySQL already installed: Need to change the parameters of MySQL connection in /Nibras/Application/Tomcat/conf/context.xml; specifically changing the hostname, port, username and password. 2- Port 80 already occupied: Need to change port 80 in file /Nibras/Application/Tomcat/conf/server.xml to another port e.g. 81, or 2019. 3 - Different location to extract \"Nibras.zip\": Need to update the paths in the startup script \"Start-Nibras.bat\" to match the new location. 4 - Different location for the repository: Need just to change the setting value \"root.rps1.path\" inside the application after running it.","title":"Other cases"},{"location":"10.html#advanced-installation","text":"If you have a supported application server e.g. Tomcat, and MySQL already installed, you just need to install the war file (from the releases section on Nibras PKM github page), and delploy it after configuring its access to the database. Nibras uses a JNDI named db_nibras. In tomcat, you can put this tag below the tag in /conf/context.xml file: Resource auth=\"Container\" driverClassName=\"com.mysql.jdbc.Driver\" name=\"jdbc/db_nibras\" type=\"javax.sql.DataSource\" url=\"jdbc:mysql://localhost:3306/db_nibras\" username=\"nibras-user\" password=\"the-password\"/ after chaning the username and password of the account to use to access the database. install the database server MySQL, and create the database to be used by Nibras. launch the application server Tomcat (that runs Nibras).","title":"Advanced installation"},{"location":"10.html#update","text":"To update the Nibras applicatin, simply download the latest war file the releases page, and put it under (Nibras-path)/Tomcat/webapps, after deleting the existing nibras.war file and nibras folder. It's better to shutdown Nibras first (clicking on Stop-Nibras.bat) before doing the upgrade.","title":"Update"},{"location":"10.html#access","text":"To access the application, go to https://localhost:2019/nibras from your browser (Firefox and Chrome recommended), then enter the username: admin and password: admin .","title":"Access"},{"location":"10.html#configuration","text":"Aside from the configuring Tomcat and MySQL, Nibras configuration is done through the application itself, from the Setting panel, on the right of the screen. 12. First steps * Decide on the repository locations. * Decide on the modules you want to use (the modules enabled by default are: notes, tasks, and resources). * Decide on the parameters (types, statuses, contexts etc) that best reflect your information needs. Enter the above choices through the settings and parameters panels. Note: It's better to start with the minimal number of modules, and enable more module with time. This will speed up learning time and reduce the complexity of using it.","title":"Configuration"},{"location":"11.html","text":"Nibras Reader Nibras Reader is an Android application that connects to a Nibras PKM system (e.g. on the same WIFI network), and gets the bookmarked records in key modules. It allows the user to enter quick one-line notes that will be synced to Nibras Desktop on user's choice. To use Nibras Reader, the user has to specify first the IP and port of Nibras PKM (found on the footer region). Then, when clicking 'Sync', all bookmarked records will be available for reading on mobile. Google Play link: [https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile] (https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile) To get it, download and install the .apk release found on its website: [https://github.com/mfakih294/nibras-mobile] (https://github.com/mfakih294/nibras-mobile).","title":"Nibras Reader"},{"location":"11.html#nibras-reader","text":"Nibras Reader is an Android application that connects to a Nibras PKM system (e.g. on the same WIFI network), and gets the bookmarked records in key modules. It allows the user to enter quick one-line notes that will be synced to Nibras Desktop on user's choice. To use Nibras Reader, the user has to specify first the IP and port of Nibras PKM (found on the footer region). Then, when clicking 'Sync', all bookmarked records will be available for reading on mobile. Google Play link: [https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile] (https://play.google.com/store/apps/details?id=khuta.org.nibras.mobile) To get it, download and install the .apk release found on its website: [https://github.com/mfakih294/nibras-mobile] (https://github.com/mfakih294/nibras-mobile).","title":"Nibras Reader"},{"location":"12.html","text":"License License of Nibras PKM Nibras is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Legal disclaimer Nibras PKM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. License of the presentation This presentation is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License .","title":"License"},{"location":"12.html#license","text":"License of Nibras PKM Nibras is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Legal disclaimer Nibras PKM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. License of the presentation This presentation is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License .","title":"License"}]}